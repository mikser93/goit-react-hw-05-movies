{"version":3,"file":"static/js/888.5602e233.chunk.js","mappings":"2OACA,EAA0B,8BAA1B,EAAkE,8BAAlE,EAAwG,4BAAxG,EAA8I,8BAA9I,EAAuL,+B,SCKxK,SAASA,IACpB,OAAkCC,EAAAA,EAAAA,UAAS,MAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MASjB,IAPAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAgBL,GACXM,MAAK,SAAAC,GAAI,OAAIR,EAAaQ,EAAjB,IACTC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAhB,GAEjB,GAAE,IAECX,EAAW,CACX,IAAQc,EAAqEd,EAArEc,YAAaC,EAAwDf,EAAxDe,MAAOC,EAAiDhB,EAAjDgB,aAAcC,EAAmCjB,EAAnCiB,aAAcC,EAAqBlB,EAArBkB,SAAUC,EAAWnB,EAAXmB,OAElE,OACI,iBAAKC,UAAWC,EAAhB,WACI,SAAC,KAAD,CAAMD,UAAWC,EAAYC,GAAIlB,EAASmB,OAAS,IAAnD,SAAyD,gBACzD,iBAAKH,UAAWC,EAAhB,WACI,gBAAKG,IAAKV,EAAW,0CAAsCA,GAAgBW,EAASC,MAAM,MAAMC,OAAO,MAAMC,IAAI,YACjH,iBAAKR,UAAWC,EAAhB,WACI,0BAAKN,EAAL,KAAcC,EAAaa,MAAM,EAAG,GAApC,QACA,yCAAgC,GAAfZ,GAAmBa,QAAQ,GAA5C,QACA,sCACA,uBAAIZ,KACJ,oCACA,yBACKC,EAAOY,KAAI,gBAAGC,EAAH,EAAGA,KAAH,OAAc,uBAAeA,GAAPA,EAAtB,aAIxB,iBAAMZ,UAAWC,EAAjB,WACI,mDACA,2BACI,yBAAI,SAAC,KAAD,CAAMC,GAAE,kBAAapB,EAAb,SAA6BqB,MAAOnB,EAASmB,MAArD,qBACJ,yBAAI,SAAC,KAAD,CAAMD,GAAE,kBAAapB,EAAb,YAAgCqB,MAAOnB,EAASmB,MAAxD,8BAGZ,SAAC,KAAD,MAGX,CACJ,C,uJChDD,IAAMU,EAAU,mCAEHC,EAAc,WACvB,OAAOC,MAAM,2DAAD,OAA4DF,IACnEzB,MAAK,SAAAC,GACF,IAAKA,EAAK2B,GACN,MAAM,IAAIC,MAAM5B,EAAK6B,QAEzB,OAAO7B,EAAK8B,MACf,GACR,EAEYC,EAAe,SAACC,GACzB,OAAON,MAAM,qDAAD,OAAsDF,EAAtD,kBAAuEQ,IAC9EjC,MAAK,SAAAC,GACF,IAAKA,EAAK2B,GACN,MAAM,IAAIC,MAAM5B,EAAK6B,QAEzB,OAAO7B,EAAK8B,MACf,GACR,EAEYhC,EAAkB,SAACmC,GAC5B,OAAOP,MAAM,sCAAD,OAAuCO,EAAvC,oBAAqDT,IAC5DzB,MAAK,SAAAC,GACF,IAAKA,EAAK2B,GACN,MAAM,IAAIC,MAAM5B,EAAK6B,QAEzB,OAAO7B,EAAK8B,MACf,GACR,EAEYI,EAAiB,SAACD,GAC3B,OAAOP,MAAM,sCAAD,OAAuCO,EAAvC,4BAA6DT,IACpEzB,MAAK,SAAAC,GACF,IAAKA,EAAK2B,GACN,MAAM,IAAIC,MAAM5B,EAAK6B,QAEzB,OAAO7B,EAAK8B,MACf,GACR,EAEYK,EAAkB,SAACF,GAC5B,OAAOP,MAAM,sCAAD,OAAuCO,EAAvC,4BAA6DT,IACpEzB,MAAK,SAAAC,GACF,IAAKA,EAAK2B,GACN,MAAM,IAAIC,MAAM5B,EAAK6B,QAEzB,OAAO7B,EAAK8B,MACf,GACR,C","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieDetails/MovieDetails.module.css?9ca9","components/MovieDetails/MovieDetails.jsx","services/requestsAPI.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"wrapper\":\"MovieDetails_wrapper__cJixg\",\"details\":\"MovieDetails_details__tmd20\",\"stats\":\"MovieDetails_stats__Xbiuj\",\"addInfo\":\"MovieDetails_addInfo__xdErv\",\"backLink\":\"MovieDetails_backLink__haiys\"};","import { useState, useEffect } from 'react';\nimport { Link, Outlet, useParams, useLocation } from 'react-router-dom';\nimport { getMovieDetails } from '../../services/requestsAPI';\nimport noimage from '../../images/noimage.png';\nimport s from './MovieDetails.module.css';\n\nexport default function Header() {\n    const [movieData, setMovieData] = useState(null);\n    const { movieId } = useParams();\n    const location = useLocation();\n    \n    useEffect(() => {\n        getMovieDetails(movieId)\n            .then(resp => setMovieData(resp))\n            .catch(err => console.log(err));\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (movieData) {\n        const { poster_path, title, release_date, vote_average, overview, genres } = movieData;\n\n        return (\n            <div className={s.wrapper}>\n                <Link className={s.backLink} to={location.state || '/'}>{'<- Go back'}</Link>\n                <div className={s.details}>\n                    <img src={poster_path ? `https://image.tmdb.org/t/p/w500/${poster_path}` : noimage} width=\"250\" height=\"375\" alt=\"poster\" />\n                    <div className={s.stats}>\n                        <h1>{title} ({release_date.slice(0, 4)})</h1>\n                        <p>User score: {(vote_average * 10).toFixed(0)}%</p>\n                        <h2>Overview</h2>\n                        <p>{overview}</p>\n                        <h3>Genres</h3>\n                        <div>\n                            {genres.map(({ name }) => <p key={name}>{name}</p>)}\n                        </div>\n                    </div>\n                </div>\n                <div  className={s.addInfo}>\n                    <p>Additional information</p>\n                    <ul>\n                        <li><Link to={`/movies/${movieId}/cast`} state={location.state}>Cast</Link></li>\n                        <li><Link to={`/movies/${movieId}/reviews`} state={location.state}>Reviews</Link></li>\n                    </ul>\n                </div>\n                <Outlet />\n            </div>\n        );\n    };\n};","const API_KEY = '37deb310e61664139196705f69cb28d6';\n\nexport const getTrending = () => {\n    return fetch(`https://api.themoviedb.org/3/trending/movie/day?api_key=${API_KEY}`)\n        .then(resp => {\n            if (!resp.ok) {\n                throw new Error(resp.status);\n            }\n            return resp.json();\n        });\n};\n\nexport const searchMovies = (query) => {\n    return fetch(`https://api.themoviedb.org/3/search/movie?api_key=${API_KEY}&query=${query}`)\n        .then(resp => {\n            if (!resp.ok) {\n                throw new Error(resp.status);\n            }\n            return resp.json();\n        });\n};\n\nexport const getMovieDetails = (id) => {\n    return fetch(`https://api.themoviedb.org/3/movie/${id}?api_key=${API_KEY}`)\n        .then(resp => {\n            if (!resp.ok) {\n                throw new Error(resp.status);\n            }\n            return resp.json();\n        });\n};\n\nexport const getMovieActors = (id) => {\n    return fetch(`https://api.themoviedb.org/3/movie/${id}/credits?api_key=${API_KEY}`)\n        .then(resp => {\n            if (!resp.ok) {\n                throw new Error(resp.status);\n            }\n            return resp.json();\n        });\n};\n\nexport const getMovieReviews = (id) => {\n    return fetch(`https://api.themoviedb.org/3/movie/${id}/reviews?api_key=${API_KEY}`)\n        .then(resp => {\n            if (!resp.ok) {\n                throw new Error(resp.status);\n            }\n            return resp.json();\n        });\n};"],"names":["Header","useState","movieData","setMovieData","movieId","useParams","location","useLocation","useEffect","getMovieDetails","then","resp","catch","err","console","log","poster_path","title","release_date","vote_average","overview","genres","className","s","to","state","src","noimage","width","height","alt","slice","toFixed","map","name","API_KEY","getTrending","fetch","ok","Error","status","json","searchMovies","query","id","getMovieActors","getMovieReviews"],"sourceRoot":""}